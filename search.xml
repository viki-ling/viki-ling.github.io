<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试</title>
      <link href="/2022/08/22/test/"/>
      <url>/2022/08/22/test/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建博客&lt;一&gt;</title>
      <link href="/2022/07/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/07/14/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h1><h2 id="一、工具下载"><a href="#一、工具下载" class="headerlink" title="一、工具下载"></a>一、工具下载</h2><h3 id="1-下载Git，并注册"><a href="#1-下载Git，并注册" class="headerlink" title="1.下载Git，并注册"></a>1.下载Git，并注册</h3><h3 id="2-官网下载node-js"><a href="#2-官网下载node-js" class="headerlink" title="2.官网下载node.js"></a>2.<a href="https://nodejs.org/zh-cn/">官网</a>下载node.js</h3><pre><code>cmd下查看node -vnpm -vgit --version</code></pre><h3 id="3-在node-js下hexo下载"><a href="#3-在node-js下hexo下载" class="headerlink" title="3.在node.js下hexo下载"></a>3.在node.js下hexo下载</h3><pre><code>npm install hexo-cli  -g检查是否下载成功hex -v</code></pre><h3 id="4-检查"><a href="#4-检查" class="headerlink" title="4.检查"></a>4.检查</h3><pre><code>Windows+R cmd 输入git --version npm -vnode -v</code></pre><p>出现版本号，即配置成功</p><h3 id="5-hexo"><a href="#5-hexo" class="headerlink" title="5.hexo"></a>5.hexo</h3><p>确认配置好后下载 hexo</p><pre><code>npm install hexo-cli -g</code></pre><p>检查</p><pre><code>hexo -v</code></pre><h2 id="二、搭建仓库"><a href="#二、搭建仓库" class="headerlink" title="二、搭建仓库"></a>二、搭建仓库</h2><h3 id="1-gitub新建仓库"><a href="#1-gitub新建仓库" class="headerlink" title="1.gitub新建仓库"></a>1.gitub新建仓库</h3><p>仓库名：</p><pre><code>&lt;注册时的用户名&gt;.github.io</code></pre><h2 id="三、生成SSH-Keys"><a href="#三、生成SSH-Keys" class="headerlink" title="三、生成SSH Keys"></a>三、生成SSH Keys</h2><h3 id="1-进入一个D盘下的文件夹，右键Git-bash-here"><a href="#1-进入一个D盘下的文件夹，右键Git-bash-here" class="headerlink" title="1.进入一个D盘下的文件夹，右键Git bash here"></a>1.进入一个D盘下的文件夹，右键Git bash here</h3><pre><code>sh#发现已经装过ssh，装git时自带ssh-keygen -t rsa -C "注册的邮箱"四次回车### 2.以下即为四个回车生成出来的文件![image-20220711121255054](https://viki-ling.oss-cn-beijing.aliyuncs.com/img/learn/202207111212095.png)### 3.打开第二个文件,复制公钥![image-20220711121344344](https://viki-ling.oss-cn-beijing.aliyuncs.com/img/learn/202207111213392.png)### 4.git——sitting——SSH and GPG keys——New SSH key名称随便起，钥匙填刚刚复制的![image-20220711121657949](https://viki-ling.oss-cn-beijing.aliyuncs.com/img/learn/202207111216030.png)以下显示 即为安装成功![image-20220711121928338](https://viki-ling.oss-cn-beijing.aliyuncs.com/img/learn/202207111219394.png)### 5.检查是否成功</code></pre><p>输入<br>ssh -T <a href="mailto:git@gitub.com">git@gitub.com</a><br>等待<br>yes<br>出现 Hi viki-ling！即为成功</p><h2 id="四、生成本地博客内容"><a href="#四、生成本地博客内容" class="headerlink" title="四、生成本地博客内容"></a>四、生成本地博客内容</h2><h3 id="1-新建专门写blog的文件夹"><a href="#1-新建专门写blog的文件夹" class="headerlink" title="1.新建专门写blog的文件夹"></a>1.新建专门写blog的文件夹</h3><pre><code>hexo init #初始化hexo博客hexo g  #生成hexo s #打开本地服务器，静态生成本地页面</code></pre><p>浏览器即可直接访问本地页面</p><h2 id="五、发布博客到互联网"><a href="#五、发布博客到互联网" class="headerlink" title="五、发布博客到互联网"></a>五、发布博客到互联网</h2><h3 id="1-修改blog文件夹下-config-yml文件"><a href="#1-修改blog文件夹下-config-yml文件" class="headerlink" title="1.修改blog文件夹下_config.yml文件"></a>1.修改blog文件夹下_config.yml文件</h3><p>改deploy下的 东西，注意 每一段都得空格一下 再输入</p><p><a href="https://cdn.jsdelivr.net/gh/viki-ling/picodemo/img/202208232144080.png">https://cdn.jsdelivr.net/gh/viki-ling/picodemo/img/202208232144080.png</a></p><h3 id="2-在blog下Git-bash"><a href="#2-在blog下Git-bash" class="headerlink" title="2.在blog下Git bash"></a>2.在blog下Git bash</h3><pre><code>npm install hexo-deployer-git --save  装工具hexo g 生成页面hexo d 本地文件上传git</code></pre><p>bug ——hexo d 报错</p><p>第一次尝试：</p><p>用git pull –rebase origin master</p><p>还是报错</p><p>第二次尝试</p><pre><code>git config --global user.email"12345678@qq.com"//自己的QQ即可git config --global user.name"XXX"//自己昵称即可</code></pre><p>报错原因：应该是默认git没有配置用户导致的</p><p>以后可以参考的尝试</p><p><a href="https://blog.csdn.net/Kevin_Carpricron/article/details/124069885">博客教程–Hexo d部署报错之spawn failed</a></p><h2 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h2><h3 id="1-git常用命令"><a href="#1-git常用命令" class="headerlink" title="1.git常用命令"></a>1.git常用命令</h3><p><a href="https://blog.csdn.net/qq_53113396/article/details/124983800">20个最常用的git命令</a></p><p><a href="https://blog.csdn.net/halaoda/article/details/78661334">git命令大全</a></p><ul><li><h4 id="git-config"><a href="#git-config" class="headerlink" title="git config"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git config</a></h4><p>用法：git config –global user.name “[name]”</p><p>用法：git config –global user.email “[email address]”</p><p>该命令将分别设置提交代码的用户名和电子邮件地址。</p></li></ul><h4 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git init</a></h4><p>  用法：git init [repository name]</p><p>  该命令可用于创建一个新的代码库。</p><h4 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git clone</a></h4><p>  用法：git clone [url]</p><p>  该命令可用于通过指定的URL获取一个代码库。</p><h4 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git add</a></h4><p>  用法：git add [file]</p><p>  该命令可以将一个文件添加至stage(暂存区)。</p><h4 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git commit</a></h4><p>  用法：git commit -m “[ Type in the commit message]”</p><p>  该命令可以在版本历史记录中永久记录文件。</p><h4 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git diff</a></h4><p>  用法：git diff</p><p>  该命令可以显示尚未添加到stage的文件的变更。</p><p>  用法：git diff –staged</p><p>  该命令可以显示添加到stage的文件与当前最新版本之间的差异。</p><p>  用法：git diff [first branch] [second branch]</p><p>  该命令可以显示两个分支之间的差异。</p><h4 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git reset</a></h4><p>  用法：git reset [file]</p><p>  该命令将从stage中撤出指定的文件，但可以保留文件的内容。</p><p>  用法：git reset [commit]</p><p>  该命令可以撤销指定提交之后的所有提交，并在本地保留变更。</p><h4 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git status</a></h4><p>  用法：git status</p><p>  该命令将显示所有需要提交的文件。</p><h4 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git rm</a></h4><p>  用法：git rm [file]</p><p>  该命令将删除工作目录中的文件，并将删除动作添加到stage。、</p><h4 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git log</a></h4><p>  用法：git log</p><p>  该命令可用于显示当前分支的版本历史记录。</p><p>  用法：git log –follow[file]</p><p>  该命令可用于显示某个文件的版本历史记录，包括文件的重命名。</p><h4 id="git-show"><a href="#git-show" class="headerlink" title="git show"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git show</a></h4><p>  用法：git show [commit]</p><p>  该命令经显示指定提交的元数据以及内容变更。</p><h4 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTA2NTU2Ng==&amp;mid=2247487551&amp;idx=1&amp;sn=18f64ba49f3f0f9d8be9d1fdef8857d9&amp;scene=21#wechat_redirect">git branch</a></h4><p>  用法：git branch</p><p>  该命令将显示当前代码库中所有的本地分支。</p><h3 id="2-hexo的一些常用命令"><a href="#2-hexo的一些常用命令" class="headerlink" title="2.hexo的一些常用命令"></a>2.hexo的一些常用命令</h3><pre><code>hexo s  启动本地服务器，用于预览主题。默认地址： http://localhost:4000/hexo new "笔记 二"  新建一篇标题为 笔记 二 的文章，因为标题里有空格，所以加上了引号。hexo new page aboutme  新建一个标题为 aboutme 的页面，默认链接地址为 主页地址/aboutme/hexo d  自动生成网站静态文件，并部署到设定的仓库。hexo clean  自动生成网站静态文件，并部署到设定的仓库。hexo g  生成网站静态文件到默认设置的 public 文件夹。hexo version  #查看Hexo的版本</code></pre><p>这里一般都用的缩写</p><pre><code>hexo n ： hexo newhexo g ： hexo generatehexo s ： hexo serverhexo d ： hexo deploy</code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/07/11/hello-world/"/>
      <url>/2022/07/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
